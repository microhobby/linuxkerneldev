{
	"name": "linuxkerneldev",
	"displayName": "Embedded Linux Kernel Dev",
	"description": "Tool to help find documentation and device tree matching on device driver source code, by device tree binding compatible strings.",
	"publisher": "microhobby",
	"repository": {
		"url": "https://github.com/microhobby/linuxkerneldev"
	},
	"version": "0.4.9",
	"keywords": [
		"ctags",
		"kernel",
		"linux",
		"device",
		"tree"
	],
	"engines": {
		"vscode": "^1.72.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:embeddedLinuxDev.helloWorld",
		"onLanguage:c",
		"onLanguage:dts",
		"onLanguage:dtsi",
		"onLanguage:kconfig",
		"onLanguage:makefile",
		"onView:linuxDevCmdView",
		"onCommand:embeddedLinuxDev.reloadCTags",
		"onCommand:embeddedLinuxDev.regenerateCTags"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "embeddedLinuxDev.regenerateCTags",
				"title": "Ctags Support: regenerate tags file"
			},
			{
				"command": "embeddedLinuxDev.reloadCTags",
				"title": "Ctags Support: reloadCtags"
			},
			{
				"command": "embeddedLinuxDev.findAndOpenDeviceTreeDoc",
				"title": "Device Tree Doc from compatible",
				"icon": {
					"light": "res/boolean.svg",
					"dark": "res/boolean.svg"
				}
			},
			{
				"command": "embeddedLinuxDev.findAndOpenDeviceTreeMatchDriver",
				"title": "Device Driver Match from compatible",
				"icon": {
					"light": "res/boolean.svg",
					"dark": "res/boolean.svg"
				}
			},
			{
				"command": "embeddedLinuxDev.openArmDtsDtsi",
				"title": "ARM dts/dtsi from include",
				"icon": {
					"light": "res/boolean.svg",
					"dark": "res/boolean.svg"
				}
			},
			{
				"command": "embeddedLinuxDev.openArm64DtsDtsi",
				"title": "ARM64 dts/dtsi from include",
				"icon": {
					"light": "res/boolean.svg",
					"dark": "res/boolean.svg"
				}
			},
			{
				"command": "embeddedLinuxDev.openLinuxInclude",
				"title": "Include/linux from selected",
				"icon": {
					"light": "res/boolean.svg",
					"dark": "res/boolean.svg"
				}
			}
		],
		"configuration": [
			{
				"title": "Universal CTags",
				"properties": {
					"ctags.excludePatterns": {
						"type": "array",
						"items": "string",
						"markdownDescription": "An array of file and directory exclude patterns to be considered when (re)generating tags. Each pattern is passed to ctags as --exclude=_pattern_."
					},
					"ctags.languages": {
						"type": "array",
						"items": "string",
						"markdownDescription": "An array of languages to be considered when (re)generating tags. The languages are passed to ctags as --languages=_lang1_,_lang2_. See ctags --list-languages for valid values.",
						"default": [
							"C",
							"C++",
							"DTS",
							"Kconfig",
							"Make"
						]
					},
					"ctags.regenerateOnSave": {
						"type": "boolean",
						"markdownDescription": "If true, then ctags will be regenerated and reindexed on save.",
						"default": false
					},
					"ctags.disable": {
						"type": "boolean",
						"markdownDescription": "If true, then ctags will be disabled",
						"default": false
					}
				}
			},
			{
				"title": "Linux Kernel Dev",
				"properties": {
					"kerneldev.useDocker": {
						"type": "boolean",
						"markdownDescription": "If true, then ctags/dtc/cpp will generated from the seadoglinux/utils docker image (Windows Only!)",
						"default": false
					},
					"kerneldev.experimental.newDtsEngine": {
						"type": "boolean",
						"markdownDescription": "Use the experimental Device Tree Source completion and lookup engine. (⚠️ Experimental features have not been fully tested and may have unexpected behavior)",
						"default": false
					}
				}
			},
			{
				"title": "DeviceTree",
				"properties": {
					"devicetree.bindings": {
						"type": "array",
						"description": "List of directories containing binding descriptors. Relative paths are executed from each workspace.",
						"default": [
							"${workspaceFolder}/dts/bindings",
							"${workspaceFolder}/Documentation/devicetree/bindings"
						]
					}
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "linuxdev-options",
					"title": "Embedded Linux Dev",
					"icon": "res/embeddedLinux.svg"
				}
			]
		},
		"menus": {
			"view/item/context": [
				{
					"command": "embeddedLinuxDev.findAndOpenDeviceTreeDoc",
					"when": "view == linuxDevCmdView",
					"group": "navigation"
				},
				{
					"command": "embeddedLinuxDev.findAndOpenDeviceTreeMatchDriver",
					"when": "view == linuxDevCmdView",
					"group": "navigation"
				}
			],
			"editor/context": [
				{
					"command": "embeddedLinuxDev.findAndOpenDeviceTreeDoc",
					"when": "resourceLangId == c || resourceLangId == dts || resourceLangId == dtsi",
					"group": "LinuxGroup1@1"
				},
				{
					"command": "embeddedLinuxDev.findAndOpenDeviceTreeMatchDriver",
					"when": "resourceLangId == c || resourceLangId == dts || resourceLangId == dtsi",
					"group": "LinuxGroup1@2"
				},
				{
					"command": "embeddedLinuxDev.openArmDtsDtsi",
					"when": "resourceLangId == c || resourceLangId == dts || resourceLangId == dtsi",
					"group": "LinuxGroup2@1"
				},
				{
					"command": "embeddedLinuxDev.openArm64DtsDtsi",
					"when": "resourceLangId == c || resourceLangId == dts || resourceLangId == dtsi",
					"group": "LinuxGroup2@2"
				},
				{
					"command": "embeddedLinuxDev.openLinuxInclude",
					"when": "resourceLangId == c || resourceLangId == dts || resourceLangId == dtsi",
					"group": "LinuxGroup3@1"
				}
			]
		},
		"views": {
			"linuxdev-options": [
				{
					"id": "linuxDevCmdView",
					"name": "Commands"
				}
			]
		},
		"languages": [
			{
				"id": "kconfig",
				"aliases": [
					"Kconfig"
				],
				"filenamePatterns": [
					"Kconfig*",
					"*_defconfig",
					".config*",
					"config-*"
				],
				"configuration": "syntaxes/kconfig-language.json"
			},
			{
				"id": "dts",
				"aliases": [
					"DeviceTree"
				],
				"configuration": "syntaxes/devicetree-language.json",
				"extensions": [
					".dts",
					".dtsi",
					".dts_compiled",
					".overlay",
					".dts.pre.tmp"
				],
				"firstLine": "/dts-v1/;"
			}
		],
		"grammars": [
			{
				"language": "kconfig",
				"scopeName": "source.kconfig",
				"path": "./syntaxes/kconfig.tmGrammar.json"
			},
			{
				"language": "dts",
				"scopeName": "source.dts",
				"path": "./syntaxes/dts.tmLanguage.json"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.1",
		"@types/js-yaml": "3.11.1",
		"@types/mocha": "^5.2.7",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.72.0",
		"mocha": "^10.1.0",
		"tslint": "^5.20.0",
		"typescript": "^4.9.3",
		"vscode-test": "^1.2.2"
	},
	"dependencies": {
		"js-yaml": "^3.13.1",
		"textindexer": "0.0.7",
		"glob": "^7.1.5"
	},
	"icon": "res/icon2.png",
	"license": "MIT"
}
